# # # Simple workflow for deploying static content to GitHub Pages
# # name: Deploy static content to Pages

# # on:
# #   # Runs on pushes targeting the default branch
# #   push:
# #     branches: ["main"]

# #   # Allows you to run this workflow manually from the Actions tab
# #   workflow_dispatch:

# # # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# # permissions:
# #   contents: read
# #   pages: write
# #   id-token: write

# # # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# # # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
# # concurrency:
# #   group: "pages"
# #   cancel-in-progress: false

# # jobs:
# #   # Single deploy job since we're just deploying
# #   deploy:
# #     environment:
# #       name: github-pages
# #       url: ${{ steps.deployment.outputs.page_url }}
# #     runs-on: ubuntu-latest
# #     steps:
# #       - name: Checkout
# #         uses: actions/checkout@v4
# #       - name: Setup Pages
# #         uses: actions/configure-pages@v5
# #       - name: Upload artifact
# #         uses: actions/upload-pages-artifact@v3
# #         with:
# #           # Upload entire repository
# #           path: '.'
# #       - name: Deploy to GitHub Pages
# #         id: deployment
# #         uses: actions/deploy-pages@v4



# #workflow which i used to deploy the project to eks cluster using github actions

# name: Deploy to EKS

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Set up AWS CLI
#       uses: aws-actions/configure-aws-credentials@v2
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ${{secrets.AWS_REGION}} # Replace with your EKS cluster's region

#     - name: Update kubeconfig
#       run: aws eks update-kubeconfig --region ${{secrets.AWS_REGION}} --name my-eks-cluster

#     - name: Log in to Docker Hub
#       run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

#     - name: Build and push frontend Docker image
#       run: |
#           docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest -f Frontend/Dockerfile ./Frontend
#           docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

#     - name: Build and push backend Docker image
#       run: |
#           docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest -f Backend/Dockerfile ./Backend
#           docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

#     - name: Deploy to EKS
#       run: |
#         kubectl apply -f foodtube/frontendapp/deploy.yaml
#         kubectl apply -f foodtube/backendapp/deploy.yaml